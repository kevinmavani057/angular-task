{"version":3,"sources":["./src/app/admin/admin-dashboard/admin-dashboard.component.ts","./src/app/admin/admin-dashboard/admin-dashboard.component.html","./src/app/admin/admin-routing.module.ts","./src/app/user/user.component.html","./src/app/user/user.component.ts","./src/app/auth/signin/signin.component.html","./src/app/auth/signin/signin.component.ts","./src/app/authguard.guard.ts","./src/app/user/user.module.ts","./src/app/token-interceptor.service.ts","./src/environments/environment.ts","./src/app/admin/edit-user/edit-user.component.ts","./src/app/admin/edit-user/edit-user.component.html","./src/app/admin/admin-listing/admin-listing.component.ts","./src/app/admin/admin-listing/admin-listing.component.html","./src/app/service.ts","./src/app/auth/signup/signup.component.html","./src/app/auth/signup/signup.component.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/dialogbox/dialogbox.component.ts","./src/app/dialogbox/dialogbox.component.html","./src/app/auth/auth.module.ts","./src/app/user/user-routing.module.ts","./src/app/app.module.ts","./src/app/user/user-listing/user-listing.component.ts","./src/app/user/user-listing/user-listing.component.html","./src/app/sharedmodule/sharedmodule.module.ts","./src/app/user/user-dashboard/user-dashboard.component.ts","./src/app/user/user-dashboard/user-dashboard.component.html","./src/app/admin/admin.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Service } from 'src/app/service';\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.scss']\n})\nexport class AdminDashboardComponent implements OnInit {\n\n  constructor(private service:Service, private router: Router) { }\n  firstName = this.service.getFirstName();\n  ngOnInit(): void {\n  \n  }\n  \n}\n","<p>Welcome, <strong>{{firstName}}</strong></p>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthguardGuard } from '../authguard.guard';\nimport { AdminDashboardComponent } from './admin-dashboard/admin-dashboard.component';\nimport { AdminListingComponent } from './admin-listing/admin-listing.component';\nimport { AdminComponent } from './admin.component';\nimport { EditUserComponent } from './edit-user/edit-user.component';\n\nconst routes: Routes = [\n  {\n    path: 'admin',\n    component: AdminComponent,\n    canActivate:[ AuthguardGuard],\n    children: [{\n      path: 'admin-profile',\n      component: AdminDashboardComponent\n    },\n    {\n      path: 'admin-listing',\n      component: AdminListingComponent,\n      children: [{path: 'edit/:id',\n      component: EditUserComponent}]\n    },\n    \n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\r\n    initialNavigation: 'enabled'\r\n})],\n  exports: [RouterModule]\n})\nexport class AdminRoutingModule { }\n","<mat-toolbar>\n    <a mat-button routerLink=\"./user-listing\" (click)='service.showUserProfile=false'>User List</a>\n    <a mat-button routerLink=\"./user-profile\" *ngIf='service.showUserProfile'>User Profile</a>\n    <p>{{service.getFirstName()}} {{service.getLastName()}}</p>\n    <button mat-button [matMenuTriggerFor]=\"beforeMenu\"><mat-icon>home</mat-icon></button>\n    <mat-menu #beforeMenu=\"matMenu\" xPosition=\"before\">\n        <a mat-menu-item routerLink='user-profile' (click)='service.showUserProfile=true'>Profile</a>\n        <button mat-menu-item (click)='logout()' class=\"logout\">Logout</button>\n    </mat-menu>\n</mat-toolbar>\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Service } from '../service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n\n  constructor(public service: Service, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  logout(){\n    localStorage.removeItem('token');\n    localStorage.removeItem('firstName');\n    localStorage.removeItem('lastName');\n    localStorage.removeItem('email');\n\n    this.router.navigate(['auth/login']);\n  }\n}\n","<mat-toolbar>\n    <span>Login     </span>\n</mat-toolbar>\n<mat-card class=\"my-card\">\n    <mat-card-content>\n        <form class=\"my-form\" #user='ngForm' (ngSubmit)='login(user)'>\n            <span *ngIf=\"infoMessage.length > 0\" class=\"success\">{{ infoMessage }}</span>\n            <mat-form-field class=\"full-width\">\n                <mat-label>Email</mat-label>\n                <input matInput placeholder=\"Email\" type=\"email\" name=\"email\" ngModel required>\n            </mat-form-field>\n            <mat-form-field class=\"full-width\">\n                <mat-label>Password</mat-label>\n                <input matInput type='password' placeholder=\"Password\" name=\"password\" ngModel required>\n            </mat-form-field>\n\n            <div><span *ngIf='invalidLogIn' class=\"error\">\n                {{errorMessage}}\n            </span></div>\n            <button mat-raised-button>LOGIN</button>\n\n        </form>\n    </mat-card-content>\n\n    <!-- <span class=\"error\">{{errorMessage}}</span> -->\n</mat-card>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Service } from 'src/app/service';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss']\n})\nexport class SigninComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private router: Router, private service: Service) { }\n  infoMessage = '';\n  users: any;\n  errorMessage: string | undefined;\n  invalidLogIn: boolean | undefined;\n\n  ngOnInit() {\n    if (this.service.isloggedIn()) {\n      this.router.navigate([`${this.service.userType}`]);\n    }\n    this.route.queryParams\n      .subscribe(params => {\n        if (params.registered !== undefined && params.registered === 'true') {\n          this.infoMessage = 'Registration Successful! Please Login!';\n        }\n      });\n\n  }\n  login(user: NgForm) {\n\n    this.service.login(user.value).subscribe((res: any) => {\n      console.log(res);\n      localStorage.setItem('token', this.service.encryptToken(res.token));\n      localStorage.setItem('firstName', res.user.firstName);\n      localStorage.setItem('lastName', res.user.lastName);\n      localStorage.setItem('email', res.user.email);\n      this.service.userType = res.user.userType\n      this.router.navigate([`${this.service.userType}`]);\n\n    }, (err: any) => {\n      if (err.error.status == 401) {\n        this.invalidLogIn = true;\n\n        this.errorMessage = '* Incorrect email or password';\n      }\n    }\n    )\n  }\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router} from '@angular/router';\nimport { Service } from './service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthguardGuard implements CanActivate {\n  constructor(private service: Service, private router: Router){\n\n  }\n  canActivate(): boolean {\n    if(this.service.isloggedIn()){\n      return true;\n    }else{\n      this.router.navigate(['auth/login']);\n      return false;\n    }\n    \n  }\n    \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserListingComponent } from './user-listing/user-listing.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { UserDashboardComponent } from './user-dashboard/user-dashboard.component';\nimport { UserRoutingModule } from './user-routing.module';\nimport { UserComponent } from './user.component';\nimport { SharedmoduleModule } from '../sharedmodule/sharedmodule.module';\n\n@NgModule({\n  declarations: [UserListingComponent, UserDashboardComponent, UserComponent],\n  imports: [\n    CommonModule,\n    MatTableModule,\n    UserRoutingModule,\n    SharedmoduleModule\n  ],\n  \n})\nexport class UserModule { }\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable, Injector } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Service } from './service';\n\n \n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor{\n\n  constructor( private service: Service) { } \n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>{\n    let tokenReq= req.clone({\n      headers: req.headers.set('token',`${this.service.getToken()}`)  \n      \n    })\n    return next.handle(tokenReq)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Service } from 'src/app/service';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.scss']\n})\nexport class EditUserComponent implements OnInit {\n\n  constructor(private service: Service) { }\n  firstName: string = '';\n  lastName: string = '';\n  email: string = '';\n\n  ngOnInit(): void {\n  }\n  update(user: NgForm){\n    this.service.updateUser(user.value).subscribe(res=>{\n      console.log(res);\n      \n    });\n  }\n}\n","<mat-card>\n    <mat-card-content>\n\n        <form class=\"my-form\" #userData='ngForm' (ngSubmit)='update(userData)'>\n\n            <mat-form-field class=\"full-width\">\n                <mat-label>First Name</mat-label>\n                <input matInput placeholder=\"First Name\" name=\"firstName\" minlength=\"3\" required [(ngModel)]='firstName'>\n\n            </mat-form-field>\n            <br>\n            <mat-form-field class=\"full-width\">\n                <mat-label>Last Name</mat-label>\n                <input matInput placeholder=\"Last Name\" name=\"lastName\" minlength=\"3\" required [(ngModel)]='lastName'>\n\n            </mat-form-field>\n            <br>\n            <mat-form-field class=\"full-width\">\n                <mat-label>Email</mat-label>\n                <input matInput placeholder=\"Email\" name=\"email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" [(ngModel)]='email' required>\n\n            </mat-form-field>\n\n            <mat-card-actions>\n                <button mat-raised-button>Update</button>\n            </mat-card-actions>\n            <br><br>\n        </form>\n\n    </mat-card-content>\n</mat-card>","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { DialogboxComponent } from 'src/app/dialogbox/dialogbox.component';\nimport { Service } from 'src/app/service';\n\nexport interface UserDetail {\n  userType: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n}\n@Component({\n  selector: 'app-admin-listing',\n  templateUrl: './admin-listing.component.html',\n  styleUrls: ['./admin-listing.component.scss']\n})\nexport class AdminListingComponent implements OnInit {\n\n  constructor(private service: Service, private dialog: MatDialog, private router: Router) { }\n\n  displayedColumns: string[] = ['userType', 'firstName', 'lastName', 'email', 'edit', 'delete'];\n\n  dataSource!: MatTableDataSource<UserDetail>;\n  selection!: SelectionModel<UserDetail>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  ngOnInit(): void {\n    this.service.getUserDetail().subscribe((res: any) => {\n      this.dataSource = new MatTableDataSource<UserDetail>(res);\n      this.selection = new SelectionModel<UserDetail>(false, []);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n  deleteUser(id: number) {\n    const dialogRef = this.dialog.open(DialogboxComponent);\n    dialogRef.afterClosed().subscribe((result: any) => {\n      if (result) {\n        this.service.deleteUser(id).subscribe((res) => {\n          console.log(res);\n          this.RefreshPage();\n          \n        });\n      }\n    });\n  }\n  RefreshPage(){\n    setTimeout(() => { this.ngOnInit(); }, 1000);\n  }\n}\n","<div>\n\n    <table mat-table [dataSource]=\"dataSource\" #mytable matSort>\n\n        <ng-container matColumnDef=\"userType\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> User Type </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.userType}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"firstName\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> First Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.firstName}} </td>\n        </ng-container>\n\n\n        <ng-container matColumnDef=\"lastName\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Last Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.lastName}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"email\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"edit\">\n            <th mat-header-cell *matHeaderCellDef> Edit </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button mat-icon-button type='button'><mat-icon routerLink='edit/{{element.id}}'>edit</mat-icon></button>\n            </td>\n        </ng-container>\n        <ng-container matColumnDef=\"delete\">\n            <th mat-header-cell *matHeaderCellDef> Delete </th>\n            <td mat-cell *matCellDef=\"let element\">\n                <button mat-icon-button color='warn' type='submit' (click)='deleteUser(element.id)'><mat-icon>delete</mat-icon></button>\n\n            </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns;\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"selection.toggle(row)\" [ngClass]=\"{hovered: row.hovered, highlighted: selection.isSelected(row)}\" (mouseover)=\"row.hovered = true\" (mouseout)=\"row.hovered = false\"></tr>\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n</div>\n<hr>\n<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n// import { BehaviorSubject } from 'rxjs';\nimport * as CryptoJS from 'crypto-js';\n@Injectable({\n  providedIn: 'root'\n})\nexport class Service {\n  visible: boolean;\n  userType: string = '';\n  showUserProfile:boolean = false;\n  constructor(private http: HttpClient) { this.visible = true }\n  url = 'http://localhost:8000';\n  createUser(user: any) {\n    return this.http.post(`${this.url}/users`, user);\n  }\n  login(user: any) {\n    return this.http.post(`${this.url}/auth/login`, user);\n  }\n  getUserDetail() {\n    return this.http.get(`${this.url}/users`);\n  }\n  deleteUser(id: number) {\n    return this.http.delete(`${this.url}/users/${id}`);\n  }\n  updateUser(user: any) {\n    return this.http.put(`${this.url}/user/edit`, user);\n  }\n  getFirstName() {\n    return localStorage.getItem('firstName');\n  }\n  getLastName() {\n    return localStorage.getItem('lastName');\n  }\n  getEmail() {\n    return localStorage.getItem('email');\n  }\n  isloggedIn() {\n    return !!localStorage.getItem('token');\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  \n  encryptToken(token: string): string {\n    const secretKey = '123456789'\n    try {\n      return CryptoJS.AES.encrypt(JSON.stringify(token), secretKey).toString();\n    } catch (e) {\n      console.log(e);\n      return e;\n    }\n  \n  }\n}\n","<mat-toolbar>\n    <span>Registration</span>\n</mat-toolbar>\n<mat-card class=\"my-card\">\n    <mat-card-content>\n        <div>\n            <span *ngIf=\"invalidRegister\" class='error-message'>{{ errorMessage }}</span>\n        </div>\n        <form class=\"my-form\" #userData='ngForm' (ngSubmit)='register(userData)'>\n            <mat-radio-group aria-label=\"Select an option\" class=\"full-width\">\n                <input type=\"radio\" name=\"userType\" value=\"admin\" ngModel required />Admin\n                <input type=\"radio\" name=\"userType\" value=\"user\" ngModel required />User\n            </mat-radio-group>\n            <mat-form-field class=\"full-width\">\n                <mat-label>First Name</mat-label>\n                <input matInput placeholder=\"First Name\" name=\"firstName\" minlength=\"3\" required [(ngModel)]='firstName'>\n\n            </mat-form-field>\n            <mat-form-field class=\"full-width\">\n                <mat-label>Last Name</mat-label>\n                <input matInput placeholder=\"Last Name\" name=\"lastName\" minlength=\"3\" required [(ngModel)]='lastName'>\n\n            </mat-form-field>\n            <mat-form-field class=\"full-width\">\n                <mat-label>Email</mat-label>\n                <input matInput placeholder=\"Email\" name=\"email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\" [(ngModel)]='email' required>\n            </mat-form-field>\n            <div>\n                <span *ngIf=\"invalidRegister2\" class='error-message'>{{ alertMessage }}</span>\n            </div>\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\n                <mat-label>Password</mat-label>\n                <input matInput [type]=\"hide1 ? 'password' : 'text'\" placeholder=\"Password\" name=\"password\" minlength=\"6\" required [(ngModel)]='password'>\n                <button mat-icon-button matSuffix (click)=\"hide1 = !hide1\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide1\">\n                    <mat-icon>{{hide1 ? 'visibility_off' : 'visibility'}}</mat-icon>\n                    </button>\n            </mat-form-field>\n            <mat-form-field class=\"full-width\" appearance=\"fill\">\n                <mat-label>Confirm Password</mat-label>\n                <input matInput [type]=\"hide2 ? 'password' : 'text'\" placeholder=\"Password\" name=\"cPassword\" required [(ngModel)]='cPassword'>\n                <button mat-icon-button matSuffix (click)=\"hide2 = !hide2\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide2\">\n                    <mat-icon>{{hide2 ? 'visibility_off' : 'visibility'}}</mat-icon>\n                    </button>\n            </mat-form-field>\n            <div>\n                <span *ngIf=\"invalidRegister1\" class='error-message'>{{ alertMessage }}</span>\n            </div>\n            <mat-card-actions>\n                <button mat-raised-button>REGISTER</button>\n            </mat-card-actions>\n            <br><br>\n        </form>\n    </mat-card-content>\n</mat-card>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Service} from 'src/app/service';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  invalidRegister1: boolean | undefined;\n  invalidRegister2: boolean | undefined;\n  invalidRegister: boolean | undefined;\n\n\n  errorMessage = '';\n  firstName: string = '';\n  lastName: string = '';\n  password: string | number = '';\n  cPassword: string | number = '';\n  email: string = '';\n  hide1 = true;\n  hide2 = true;\n  usersData: any;\n\n  alertMessage: string = '';\n  constructor(private service: Service, private router: Router, private http: HttpClientModule) { }\n  ngOnInit(): void {\n    if (this.service.isloggedIn()) {\n      this.router.navigate(['user']);\n    }\n  }\n  @ViewChild('userData')\n  signupForm!: NgForm;\n  register(userData: NgForm) {\n\n    this.invalidRegister1 = false;\n    this.invalidRegister2 = false;\n    this.invalidRegister = false;\n    if (this.signupForm.valid === false) {\n      this.invalidRegister = true;\n      this.errorMessage = '* Please fill all the fields!';\n    } else {\n\n      this.service.createUser(userData.value).subscribe((res: any) => {\n        console.log(res)\n        this.router.navigate(['auth/login'], { queryParams: { registered: 'true' } });\n\n      }, (err: any) => {\n        if (err.error.status == 402) {\n          this.invalidRegister1 = true;\n          console.error('The passwords don\\'t match');\n          this.alertMessage = '* The passwords don\\'t match';\n        } else if (err.error.status == 400) {\n          this.invalidRegister2 = true;\n          console.warn('Email is already exist!, please use another mail or login into existing account')\n          this.alertMessage = '* Email is already exist!, please use another mail or login into existing account';\n        }\n      })\n\n    }\n  }\n}\n\n\n\n","<mat-toolbar *ngIf='!isLoggedIn'>\n    <mat-toolbar-row>\n        <a mat-button routerLink=\"auth/register\">Register</a>\n        <a mat-button routerLink=\"auth/login\">Login</a>\n    </mat-toolbar-row>\n</mat-toolbar>\n<router-outlet></router-outlet>","import { Component } from '@angular/core';\nimport { Service } from './service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'my-project';\n  constructor(private service: Service){}\n  isLoggedIn: boolean = this.service.isloggedIn();\n  \n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Service } from '../service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(public service: Service, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  logout(){\n    localStorage.removeItem('token');\n    localStorage.removeItem('firstName');\n    localStorage.removeItem('lastName');\n    localStorage.removeItem('email');\n\n    this.router.navigate(['auth/login']);\n  }\n}\n","<mat-toolbar>\n    <a mat-button routerLink=\"./admin-listing\">Admin List</a>\n    <a mat-button routerLink=\"./admin-profile\">Admin Profile</a>\n    <p>{{service.getFirstName()}} {{service.getLastName()}}</p>\n    <button mat-button [matMenuTriggerFor]=\"beforeMenu\"><mat-icon>home</mat-icon></button>\n    <mat-menu #beforeMenu=\"matMenu\" xPosition=\"before\">\n        <a mat-menu-item routerLink='admin-profile'>Profile</a>\n        <button mat-menu-item (click)='logout()' class=\"logout\">Logout</button>\n    </mat-menu>\n</mat-toolbar>\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dialogbox',\n  templateUrl: './dialogbox.component.html',\n  styleUrls: ['./dialogbox.component.scss']\n})\nexport class DialogboxComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  \n}\n","<h1 mat-dialog-title>Delete</h1>\n<div mat-dialog-content>Are you sure to want delete this user ?</div>\n<div mat-dialog-actions>\n    <button mat-raised-button color=\"warn\" [mat-dialog-close]=\"true\">Yes</button>\n    <button mat-raised-button mat-dialog-close>No</button>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SignupComponent } from './signup/signup.component';\nimport { SigninComponent } from './signin/signin.component';\nimport {MatRadioModule} from '@angular/material/radio';\nimport { SharedmoduleModule } from '../sharedmodule/sharedmodule.module';\n\n@NgModule({\n  declarations: [SignupComponent, SigninComponent],\n  imports: [\n    CommonModule,\n    SharedmoduleModule,\n    MatRadioModule\n  ]\n})\nexport class AuthModule { }\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthguardGuard } from '../authguard.guard';\r\nimport { UserDashboardComponent } from './user-dashboard/user-dashboard.component';\r\nimport { UserListingComponent } from './user-listing/user-listing.component';\r\nimport { UserComponent } from './user.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'user',\r\n        component: UserComponent,\r\n        canActivate: [AuthguardGuard],\r\n        children: [{\r\n            path: 'user-profile',\r\n            component: UserDashboardComponent\r\n        },\r\n        {\r\n            path: 'user-listing',\r\n            component: UserListingComponent\r\n        },\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes, {\r\n    initialNavigation: 'enabled'\r\n})],\r\n    exports: [RouterModule]\r\n})\r\nexport class UserRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AuthModule } from './auth/auth.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { UserModule } from './user/user.module';\nimport { AdminModule } from './admin/admin.module';\nimport { TokenInterceptorService } from './token-interceptor.service';\nimport { DialogboxComponent } from './dialogbox/dialogbox.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { SharedmoduleModule } from './sharedmodule/sharedmodule.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DialogboxComponent\n  ],\n  imports: [\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\n    AppRoutingModule,\n    AuthModule,\n    BrowserAnimationsModule,\n    UserModule,\n    AdminModule,\n    MatDialogModule,\n    SharedmoduleModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent],\n \n})\n\nexport class AppModule { }\n","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Service } from 'src/app/service';\n\nexport interface userDetail {\n  firstName: string;\n  lastName: string;\n  password: string | number;\n}\n\n@Component({\n  selector: 'app-user-listing',\n  templateUrl: './user-listing.component.html',\n  styleUrls: ['./user-listing.component.scss']\n})\nexport class UserListingComponent implements OnInit {\n  selection!: SelectionModel<userDetail>;\n\n  constructor(private service: Service) { }\n  displayedColumns: string[] = ['firstName', 'lastName', 'email'];\n  dataSource!: MatTableDataSource<userDetail>;\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  ngOnInit(): void {\n    this.service.getUserDetail().subscribe((res: any) => {\n\n      this.dataSource = new MatTableDataSource<userDetail>(res);\n      this.dataSource.filter = 'user';\n      this.selection = new SelectionModel<userDetail>(false, []);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n\n    }\n    );\n  }\n\n}\n","<div>\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n\n        <ng-container matColumnDef=\"firstName\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> First Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.firstName}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"lastName\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Last Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.lastName}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"email\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Email </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"selection.toggle(row)\" [ngClass]=\"{hovered: row.hovered, highlighted: selection.isSelected(row)}\" (mouseover)=\"row.hovered = true\" (mouseout)=\"row.hovered = false\"></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" [length]=\"100\" showFirstLastButtons></mat-paginator>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatCardModule } from '@angular/material/card';\nimport { FormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSortModule } from '@angular/material/sort';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,],\n  declarations: [],\n  exports: [\n    CommonModule,\n    MatTableModule,\n    MatButtonModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatCardModule,\n    FormsModule,\n    MatInputModule,\n    MatMenuModule,\n    MatSortModule,\n    HttpClientModule\n  ]\n})\nexport class SharedmoduleModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Service } from 'src/app/service';\n\n@Component({\n  selector: 'app-user-dashboard',\n  templateUrl: './user-dashboard.component.html',\n  styleUrls: ['./user-dashboard.component.scss']\n})\nexport class UserDashboardComponent implements OnInit {\n\n  constructor(private service: Service, private router: Router) { }\n  firstName = this.service.getFirstName();\n  lastName = this.service.getLastName();\n  email = this.service.getEmail();\n\n  ngOnInit(): void {}\n  logout(){\n    localStorage.removeItem('token');\n    localStorage.removeItem('firstName');\n    localStorage.removeItem('lastName');\n    localStorage.removeItem('email');\n\n    this.router.navigate(['auth/login']);\n  }\n  \n}\n","<p><strong>Name :</strong> {{firstName}} {{lastName}}</p>\r\n<p><strong>Email :</strong> {{email}}</p>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AdminRoutingModule } from './admin-routing.module';\nimport { AdminListingComponent } from './admin-listing/admin-listing.component';\n// import { MatTableModule } from '@angular/material/table';\nimport { AdminDashboardComponent } from './admin-dashboard/admin-dashboard.component';\nimport { AdminComponent } from './admin.component';\n// import {  MatButtonModule } from '@angular/material/button';\n// import { MatIconModule } from '@angular/material/icon';\n// import { MatToolbarModule } from '@angular/material/toolbar';\n// import { MatSortModule } from '@angular/material/sort';\n// import { MatPaginatorModule } from '@angular/material/paginator';\nimport { DialogboxComponent } from '../dialogbox/dialogbox.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { EditUserComponent } from './edit-user/edit-user.component';\nimport { SharedmoduleModule } from '../sharedmodule/sharedmodule.module';\n// import { MatFormFieldModule } from '@angular/material/form-field';\n// import { MatCardModule} from '@angular/material/card';\n// import { FormsModule } from '@angular/forms';\n// import { MatInputModule } from '@angular/material/input';\n// import { MatMenuModule } from '@angular/material/menu';\n\n\n@NgModule({\n  declarations: [AdminListingComponent, AdminDashboardComponent, AdminComponent, EditUserComponent],\n  imports: [\n    CommonModule,\n    AdminRoutingModule,\n    MatDialogModule,\n    SharedmoduleModule\n  ],\n  entryComponents: [DialogboxComponent]\n})\nexport class AdminModule { }\n","// import { registerLocaleData } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { AuthModule } from './auth/auth.module';\nimport { SigninComponent } from './auth/signin/signin.component';\nimport { SignupComponent } from './auth/signup/signup.component';\n\n\n\nconst routes: Routes = [\n  \n  {\n    path: 'auth/register',\n    component: SignupComponent\n  },\n  {\n    path: 'auth/login',\n    component: SigninComponent\n  },\n  {\n    path: '',\n    redirectTo:'/auth/register',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    initialNavigation: 'enabled'\n})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n});\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}